// Code generated by entc, DO NOT EDIT.

package visitlog

import (
	"time"
)

const (
	// Label holds the string label denoting the visitlog type in the database.
	Label = "visit_log"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPlatform holds the string denoting the platform field in the database.
	FieldPlatform = "platform"
	// FieldOs holds the string denoting the os field in the database.
	FieldOs = "os"
	// FieldEngineName holds the string denoting the engine_name field in the database.
	FieldEngineName = "engine_name"
	// FieldEngineVersion holds the string denoting the engine_version field in the database.
	FieldEngineVersion = "engine_version"
	// FieldBrowserName holds the string denoting the browser_name field in the database.
	FieldBrowserName = "browser_name"
	// FieldBrowserVersion holds the string denoting the browser_version field in the database.
	FieldBrowserVersion = "browser_version"
	// FieldMozilla holds the string denoting the mozilla field in the database.
	FieldMozilla = "mozilla"
	// FieldBot holds the string denoting the bot field in the database.
	FieldBot = "bot"
	// FieldMobile holds the string denoting the mobile field in the database.
	FieldMobile = "mobile"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// EdgeURL holds the string denoting the url edge name in mutations.
	EdgeURL = "url"
	// Table holds the table name of the visitlog in the database.
	Table = "log"
	// URLTable is the table that holds the url relation/edge.
	URLTable = "log"
	// URLInverseTable is the table name for the Url entity.
	// It exists in this package in order to avoid circular dependency with the "url" package.
	URLInverseTable = "url"
	// URLColumn is the table column denoting the url relation/edge.
	URLColumn = "url_logs"
)

// Columns holds all SQL columns for visitlog fields.
var Columns = []string{
	FieldID,
	FieldPlatform,
	FieldOs,
	FieldEngineName,
	FieldEngineVersion,
	FieldBrowserName,
	FieldBrowserVersion,
	FieldMozilla,
	FieldBot,
	FieldMobile,
	FieldCreatedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "log"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"url_logs",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
)
